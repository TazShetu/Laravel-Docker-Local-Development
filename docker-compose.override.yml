services:
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: project1-app
    ports:
      - "8001:8000"
    volumes:
      - ./projects/project1:/app
    working_dir: /app
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - dev-network
    entrypoint:
      [
        "/bin/sh",
        "-c",
        # For Windows 11
        "chmod +x /app/docker-entrypoint.sh && /app/docker-entrypoint.sh",
        # For Windows 10
        # "cat /app/docker-entrypoint.sh > /tmp/entrypoint.sh && chmod +x /tmp/entrypoint.sh && /tmp/entrypoint.sh",
      ]
    restart: unless-stopped

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: project2-app
    ports:
      - "8002:8000"
    volumes:
      - ./projects/project2:/app
    working_dir: /app
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - dev-network
    entrypoint:
      [
        "/bin/sh",
        "-c",
        # For Windows 11
        "chmod +x /app/docker-entrypoint.sh && /app/docker-entrypoint.sh",
        # For Windows 10
        # "cat /app/docker-entrypoint.sh > /tmp/entrypoint.sh && chmod +x /tmp/entrypoint.sh && /tmp/entrypoint.sh",
      ]
    restart: unless-stopped
    
  # app3:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: project3-app
  #   ports:
  #     - "8003:8000"
  #   volumes:
  #     - ./projects/project3:/app
  #   working_dir: /app
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   networks:
  #     - dev-network
  #   entrypoint:
  #     [
  #       "/bin/sh",
  #       "-c",
  #       # For Windows 11
  #       "chmod +x /app/docker-entrypoint.sh && /app/docker-entrypoint.sh",
  #       # For Windows 10
  #       # "cat /app/docker-entrypoint.sh > /tmp/entrypoint.sh && chmod +x /tmp/entrypoint.sh && /tmp/entrypoint.sh",
  #     ]
  #   restart: unless-stopped
